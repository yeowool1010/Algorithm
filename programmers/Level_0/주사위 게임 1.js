// [PGS] 주사위 게임 1 
// 난이도 :  level 0
// 소요시간 : 3분
// 점수: +1

/*
문제
1부터 6까지 숫자가 적힌 주사위가 두 개 있습니다. 두 주사위를 굴렸을 때 나온 숫자를 각각 a, b라고 했을 때 얻는 점수는 다음과 같습니다.

a와 b가 모두 홀수라면 a2 + b2 점을 얻습니다.
a와 b 중 하나만 홀수라면 2 × (a + b) 점을 얻습니다.
a와 b 모두 홀수가 아니라면 |a - b| 점을 얻습니다.
두 정수 a와 b가 매개변수로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요.

제한사항
a와 b는 1 이상 6 이하의 정수입니다.

입출력 예 설명
입출력 예 #1

예제 1번에서 두 주사위 숫자가 모두 홀수이므로 32 + 52 = 9 + 25 = 34점을 얻습니다. 따라서 34를 return 합니다.
입출력 예 #2

예제 2번에서 두 주사위 숫자 중 하나만 홀수이므로 2 × (6 + 1) = 2 × 7 = 14점을 얻습니다. 따라서 14를 return 합니다.
입출력 예 #3

예제 3번에서 두 주사위 숫자가 모두 홀수가 아니므로 |2 - 4| = |-2| = 2점을 얻습니다. 따라서 2를 return 합니다.
*/

/*
< 의사코드 > 
 1-6 숫자 적힌 주사위 두개
 두 개를 굴렸을 때 얻는 숫자 a,b
 둘 다 홀수일 경우 제곱해서 두 수 더하기
 하나만 홀수라면 두 수 더하고 곱하기 2
 둘 다 짝수일 경우 a - b
*/

// 모두 a라고 해서 계속 틀림
// function solution(a, b) {
//     let answer = 0;
//     if(a % 2 !== 0 && a % 2 !== 0) {
//         answer = (a**2) + (b**2)
//     } else if(a % 2 !== 0 || a % 2 !== 0){
//         answer = 2 * (a + b)
//     } else {
//         answer = a - b
//     }
//     return answer;
// }

// 마지막문제에 음수가 나와서 틀림 정수로 바꿔줄 필요 있음
// function solution(a, b) {
//     if(a % 2 !== 0 && b % 2 !== 0) {
//         return (a**2) + (b**2)
//     } else if(a % 2 === 0 && b % 2 === 0){
//         return a - b
//     } else {
//         return 2 *(a + b)
//     }
// }

// 정답 풀이1
function solution(a, b) {
    let oddNum = a % 2 !== 0 && b % 2 !== 0
    let evenNum = a % 2 === 0 && b % 2 === 0
    
    if(oddNum) {
        return (a**2) + (b**2)
    } else if(evenNum){
        return Math.abs(a - b)
    } else {
        return 2 *(a + b)
    }
}
/*
테스트 1 〉	통과 (0.04ms, 33.4MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.04ms, 33.4MB)
테스트 4 〉	통과 (0.04ms, 33.4MB)
테스트 5 〉	통과 (0.06ms, 33.4MB)
테스트 6 〉	통과 (0.04ms, 33.5MB)
테스트 7 〉	통과 (0.04ms, 33.4MB)
테스트 8 〉	통과 (0.06ms, 33.4MB)
테스트 9 〉	통과 (0.06ms, 33.4MB)
테스트 10 〉	통과 (0.04ms, 33.4MB)
테스트 11 〉	통과 (0.06ms, 33.4MB)
테스트 12 〉	통과 (0.04ms, 33.4MB)
테스트 13 〉	통과 (0.05ms, 33.4MB)
테스트 14 〉	통과 (0.06ms, 33.4MB)
테스트 15 〉	통과 (0.06ms, 33.5MB)
테스트 16 〉	통과 (0.06ms, 33.4MB)
테스트 17 〉	통과 (0.04ms, 33.5MB)
테스트 18 〉	통과 (0.04ms, 33.4MB)
테스트 19 〉	통과 (0.04ms, 33.4MB)
테스트 20 〉	통과 (0.05ms, 33.4MB)
테스트 21 〉	통과 (0.04ms, 33.4MB)
테스트 22 〉	통과 (0.04ms, 33.4MB)
테스트 23 〉	통과 (0.04ms, 33.6MB)
테스트 24 〉	통과 (0.04ms, 33.4MB)
테스트 25 〉	통과 (0.06ms, 33.4MB)
테스트 26 〉	통과 (0.03ms, 33.5MB)
테스트 27 〉	통과 (0.04ms, 33.5MB)
테스트 28 〉	통과 (0.05ms, 33.4MB)
테스트 29 〉	통과 (0.04ms, 33.4MB)
테스트 30 〉	통과 (0.04ms, 33.5MB)
테스트 31 〉	통과 (0.04ms, 33.5MB)
테스트 32 〉	통과 (0.04ms, 33.4MB)
테스트 33 〉	통과 (0.04ms, 33.5MB)
테스트 34 〉	통과 (0.04ms, 33.4MB)
테스트 35 〉	통과 (0.04ms, 33.5MB)
테스트 36 〉	통과 (0.04ms, 33.4MB)
*/

// 풀이 2
function solution(a, b) {
    let oddNum = a % 2 !== 0 && b % 2 !== 0
    let evenNum = a % 2 === 0 && b % 2 === 0

    return oddNum ? (a**2) + (b**2) : evenNum ? Math.abs(a - b) : 2 *(a + b)
}
/*
테스트 1 〉	통과 (0.03ms, 33.5MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.04ms, 33.6MB)
테스트 4 〉	통과 (0.04ms, 33.5MB)
테스트 5 〉	통과 (0.04ms, 33.4MB)
테스트 6 〉	통과 (0.03ms, 33.4MB)
테스트 7 〉	통과 (0.03ms, 33.4MB)
테스트 8 〉	통과 (0.04ms, 33.5MB)
테스트 9 〉	통과 (0.03ms, 33.5MB)
테스트 10 〉	통과 (0.03ms, 33.4MB)
테스트 11 〉	통과 (0.03ms, 33.5MB)
테스트 12 〉	통과 (0.04ms, 33.4MB)
테스트 13 〉	통과 (0.04ms, 33.4MB)
테스트 14 〉	통과 (0.03ms, 33.4MB)
테스트 15 〉	통과 (0.03ms, 33.4MB)
테스트 16 〉	통과 (0.03ms, 33.5MB)
테스트 17 〉	통과 (0.03ms, 33.6MB)
테스트 18 〉	통과 (0.03ms, 33.4MB)
테스트 19 〉	통과 (0.04ms, 33.4MB)
테스트 20 〉	통과 (0.04ms, 33.5MB)
테스트 21 〉	통과 (0.03ms, 33.5MB)
테스트 22 〉	통과 (0.04ms, 33.4MB)
테스트 23 〉	통과 (0.05ms, 33.4MB)
테스트 24 〉	통과 (0.05ms, 33.5MB)
테스트 25 〉	통과 (0.05ms, 33.4MB)
테스트 26 〉	통과 (0.03ms, 33.4MB)
테스트 27 〉	통과 (0.04ms, 33.5MB)
테스트 28 〉	통과 (0.04ms, 33.4MB)
테스트 29 〉	통과 (0.04ms, 33.4MB)
테스트 30 〉	통과 (0.03ms, 33.5MB)
테스트 31 〉	통과 (0.03ms, 33.4MB)
테스트 32 〉	통과 (0.04ms, 33.5MB)
테스트 33 〉	통과 (0.03ms, 33.4MB)
테스트 34 〉	통과 (0.04ms, 33.4MB)
테스트 35 〉	통과 (0.03ms, 33.5MB)
테스트 36 〉	통과 (0.04ms, 33.5MB)
*/

